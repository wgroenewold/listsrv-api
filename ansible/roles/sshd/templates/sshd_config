{% if inventory_hostname in groups['jumphost'] | default([]) %}
#
# Extra ports where sshd will listen in addition to the default 22 must be listed before the default of 22,
# because the geerlingly.security role will modify the last listed Port value
# and we use the geerlingly.security role with the default of 22.
#
Port 443
{% endif %}
Port 22

UseDNS no

# The home directories are owned by root and the private group of the user.
# This requires group write permissions on the home directory, which is not
# acceptable for sshd by default. Since this is a private group this is not
# a problem, and therefore sshd should not check these permissions.
StrictModes no

#
# Disable protocol version 1
#
Protocol 2

#
# Supported (Host)Key algorithms by order of preference.
# Do not use (EC)DSA keys!
#
HostKey /etc/ssh/ssh_host_ed25519_key
HostCertificate /etc/ssh/ssh_host_ed25519_key-cert.pub
HostKey /etc/ssh/ssh_host_rsa_key
HostCertificate /etc/ssh/ssh_host_rsa_key-cert.pub
HostKeyAlgorithms      ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,ssh-rsa,ssh-rsa-cert-v01@openssh.com
PubkeyAcceptedKeyTypes ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,ssh-rsa,ssh-rsa-cert-v01@openssh.com

#
# Supported KEX (Key Exchange) algorithms.
#
KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha256

#
# ToDo: All Diffie-Hellman moduli used for diffie-hellman-group-exchange-sha256 should be at least 3072-bit-long
#       See also man moduli. Moduli are stored in file: /etc/ssh/moduli
#       The 5th column of this file contains the length of the moduli.
#       To remove short moduli:
# if [[ ! -e /etc/ssh/moduli.original ]]; then
#     cp /etc/ssh/moduli > /etc/ssh/moduli.original
# fi
# awk '$5 >= 3071' /etc/ssh/moduli.original > /etc/ssh/moduli
#

#
# Supported ciphers.
#
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
#RekeyLimit default none

#
# Supported MAC (message authentication code) algorithms.
# Ciphers and MACs can be combined in multiple ways,
# but only Encrypt-then-MAC (EtM) should be used.
#
MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com

#
# Logging
#
# LogLevel VERBOSE logs user's key fingerprint on login.
# Required to have a clear audit trail of which key was used to log in.
#
SyslogFacility AUTHPRIV
LogLevel VERBOSE

#
# Authentication methods.
#
#  * Never allow direct root login: We have admin users who can sudo.
#    (see users.yml in the ansible repo)
#  * Enable key pair based auth.
#    * Fetch public keys from LDAP
#    * And allow local keys stored in ~/.ssh/ folders.
#
UsePAM yes
PermitRootLogin no
PasswordAuthentication no
PermitEmptyPasswords no
ChallengeResponseAuthentication yes
GSSAPIAuthentication no
GSSAPICleanupCredentials no
PubkeyAuthentication yes

# It is recommended to use pam_motd in /etc/pam.d/sshd instead of PrintMotd,
# as it is more configurable and versatile than the built-in version.
PrintMotd no

#
# Connection settings.
#
X11Forwarding yes
ClientAliveInterval 300

{% if (inventory_hostname in groups['jumphost'] | default([])) or (inventory_hostname in groups['ansible_proxy'] | default([])) %}
MaxSessions 50
MaxStartups 50:30:100
{% endif %}

#
# Override default of no subsystems
# and log sftp level file access that would not be easily logged otherwise.
#
Subsystem sftp /usr/libexec/openssh/sftp-server -f AUTHPRIV -l INFO -u 0027

{% if use_ldap | default(false) | bool %}
#
# Get public keys for regular users from LDAP.
#
AuthorizedKeysCommand /usr/libexec/openssh/get_public_keys_from_ldap.bash
AuthorizedKeysCommandUser nobody
{% endif %}

#
# Get public keys for all users from local authorized_keys file.
#
AuthorizedKeysFile .ssh/authorized_keys

{% if inventory_hostname not in groups['compute_nodes'] | default([]) and inventory_hostname not in groups['user_interface'] | default([])  %}
#
# Only allow (local) admin users on these servers
#
AllowGroups {{ ssh_admin.admin_groups | default("admin") | replace(",", " ") }} {{ awx_user }}
{% endif %}

{% if inventory_hostname in mfa.machines | default([]) %}
AuthenticationMethods publickey,keyboard-interactive:pam keyboard-interactive:pam

{% if mfa.no_mfa_groups is defined %}
# Disable MFA but force keys for special accounts
{% if mfa.no_mfa_addresses is defined %}
Match Group {{ mfa.no_mfa_groups }} Address {{ mfa.no_mfa_addresses }}
{% else %}
Match Group {{ mfa.no_mfa_groups }}
{% endif %}
    AuthenticationMethods publickey
{% endif %}
{% endif %}

# Disable MFA but force keys for admin accounts
Match Group {{ ssh_admin.admin_groups | default("admin") }},{{ awx_user }}
    AuthenticationMethods publickey

{% if inventory_hostname in groups['user_interface'] | default([]) and ssh_admin.admin_addresses is defined %}
# Only allow admin accounts from certain address ranges
Match Address *,!127.0.0.1,!::1,!{{ ssh_admin.admin_addresses | replace(",",",!") }}
    DenyGroups {{ ssh_admin.admin_groups | default("admin") | replace(",", " ") }}
{% endif %}
