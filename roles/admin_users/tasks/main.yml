# Create local admin groups & users and allow admin group to use sudo on all hosts.
---
- name: Create admin groups for local admin users.
  ansible.builtin.group:
    name: "{{ item }}"
    gid: "{{ auth_groups[item].gid }}"
    state: present
  with_items: "{{ local_admin_groups }}"
  become: true
- name: Add AWX user to local admin group.
  ansible.builtin.user:
    name: "{{ awx_user }}"
    groups: "{{ local_admin_groups }}"
    append: true
  become: true
- name: 'Allow passwordless sudo for local admin users.'
  ansible.builtin.lineinfile:
    path: '/etc/sudoers'
    line: "%admin  ALL=(ALL:ALL) NOPASSWD:ALL"
    owner: root
    group: root
    mode: '0440'
  become: true
- name: 'Allow passwordless sudo for LDAP admin users.'
  ansible.builtin.lineinfile:
    path: '/etc/sudoers'
    line: "%{{ ldap_admin_group }}  ALL=(ALL:ALL) NOPASSWD:ALL"
    owner: root
    group: root
    mode: '0440'
  become: true
  when: ldap_admin_group is defined
- name: "Create private groups for user's home dirs."
  ansible.builtin.group:
    name: "{{ item }}"                 # Use same name as user's account name for user's private group.
    gid: "{{ auth_users[item].uid }}"  # Use same GID as user's UID for user's private group.
    state: present
  with_items: "{{ local_admin_users }}"
  become: true
- name: "Create directory /localhome for admin users"
  ansible.builtin.file:
    name: '/localhome'
    owner: 'root'
    group: 'root'
    mode: '0755'
    state: 'directory'
  become: true
- name: Create local admin users and append them to relevant groups.
  ansible.builtin.user:
    name: "{{ item }}"
    uid: "{{ auth_users[item].uid }}"
    comment: "{{ auth_users[item].comment }}"
    group: admin
    groups: "{{ local_admin_groups }}"
    home: "/localhome/{{ item }}"
    append: false
  with_items: "{{ local_admin_users }}"
  become: true
- name: Remove keys from expired admin accounts from main user"
  ansible.posix.authorized_key:
    user: "{{ awx_user }}"
    key: "{{ auth_users[item].pub_keys }}"
    state: absent
  with_items: "{{ expired_admin_users }}"
- name: Remove expired admin accounts"
  ansible.builtin.user:
    name: "{{ item }}"
    uid: "{{ auth_users[item].uid }}"
    comment: "{{ auth_users[item].comment }}"
    group: admin
    groups: "{{ local_admin_groups }}"
    home: "/localhome/{{ item }}"
    append: false
    state: absent
  with_items: "{{ expired_admin_users }}"
  become: true
- name: 'Deploy authorized keys for admins.'
  ansible.posix.authorized_key:
    user: "{{ item }}"
    key: "{{ auth_users[item].pub_keys }}"
    state: present
    exclusive: true
  with_items: "{{ local_admin_users }}"
  become: true
...
